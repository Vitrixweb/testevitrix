/* author: https://codepen.io/sanprieto/pen/XWNjBdb
Ricardo Sanprieto */
@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');
html, body { 
  margin: 0;
  height: 100%;
  font-family: 'Roboto', sans-serif;
  color: rgb(0, 0, 0);
  font-size: 9px;
}

#magic {
  position: sticky ;
  width: 100%;
  height: 100vh;
  display: block;
  top: 0;
  left: 0;
  z-index: 1;
  max-width: 100%;
}


.playground {
  width: 100%;
  height: 100px;
  display: flex;
  flex-wrap: nowrap;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  z-index: 0; /* Definindo um z-index maior para manter o playground sobre o conteúdo rolável */
  max-width: 100%;
  background-color: black;
  border-color: black;
}

.bottomPosition {
  text-align: center;
  margin-bottom: 50px;
}

.minText {
  font-size: 14px;
}

a {
  color: white;
  font-size: 12px;
  text-decoration: none;
}

.logo {
  width: 50px;
  height: 50px;
}

.fotos {
  margin-top: 0px; /* Começa abaixo do playground */
}

.wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 500px; /* Ajuste conforme necessário */
  background-color: black;
  max-width: 100%;
  border: none; /* Remove a borda */
}

:root {
  --index: calc(1vw + 1vh);
  --transition: cubic-bezier(.1, .7, 0, 1);
}

.items {
  display: flex;
  gap: 0.4rem;
  perspective: calc(var(--index) * 35);
  max-width: 100%;
}

.item {
  width: calc(var(--index) * 3);
  height: calc(var(--index) * 12);
  background-color: #222;
  background-size: cover;
  background-position: center;
  cursor: pointer;
  filter: grayscale(1) brightness(.5);
  transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
  will-change: transform, filter, rotateY, width;
  flex-grow: 1;
}

.item::before, .item::after {
  content: '';
  position: absolute;
  height: 100%;
  width: 20px;
  right: calc(var(--index) * -1);
}

.item::after {
  left: calc(var(--index) * -1);
}

.items .item:hover {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 10));
}

.items .item:hover + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
  z-index: -1;
}

.items .item:hover + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
  z-index: -2;
}

.items .item:hover + * + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
  z-index: -3;
}

.items .item:hover + * + * + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
  z-index: -4;
}

.items .item:has( + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
}

.items .item:has( + * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
}

.items .item:has( + * + * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
}

.items .item:has( + * + * + * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
}

.items .item:active, .items .item:focus {
  width: 28vw;
  filter: inherit;
  z-index: 100;
  transform: translateZ(calc(var(--index) * 10));
  margin: 0 .45vw;
}
